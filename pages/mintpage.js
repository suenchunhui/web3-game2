import { Box, SimpleGrid, Card, CardHeader, Heading, CardBody, Text, CardFooter, Button, Image, Checkbox } from "@chakra-ui/react";
import styles from "../styles/Home.module.css";
import Authentication from "../components/Authentication";
import Head from "next/head";
import woddsABI from "../ABI/wordsNFT.json";
import { ethers } from "ethers";
import { useWeb3Auth } from "../context/web3auth";
import { useEffect, useState } from "react";
import Web3 from "web3";
import Modal from 'react-modal';
import { FaSpinner } from 'react-icons/fa';
import { Center, Square, Circle } from '@chakra-ui/react'


const customStyles = {
    content: {
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
        backgroundColor: 'rgba(0, 0, 0, 0.75)'
    }
};


export default function Mintpage(props) {
    const { isAuth, role } = props;
    const { web3Auth, provider, isLoading, createContract, getAccounts, pureProvider } = useWeb3Auth()
    const [localProvider, setProvider] = useState(null);
    const [userAddress, setUserAddress] = useState('null')
    const [show, setShow] = useState(false)
    const [modalIsOpen, setIsOpen] = useState(false);
    const [txHash, setTxHash] = useState('');
    const [loadingTX, setloadingTX] = useState('');

    useEffect(() => {

        const timeout = setTimeout(() => {
            setShow(true)
            fetchData()
        }, 3000)


        const fetchData = async () => {
            //   console.log(pureProvider)
            if (isLoading && !provider) { }
            else {
                setProvider(pureProvider)
                getAccounts().then(result => setUserAddress(result))
            }
        }
        return () => clearTimeout(timeout)

    }, [getAccounts,provider,pureProvider,isLoading, show])

    async function mintNFT(_localProvider) {
        console.log(provider)
        let woddsNFT = await createContract(woddsABI.abi, woddsABI.address)
        setloadingTX(true)
        //const web3 = new Web3(_localProvider);
        // let woddsNFT = new web3.eth.Contract(woddsABI.abi, woddsABI.address)
        let tx = await woddsNFT.methods.payToMint().send({ from: userAddress });
        console.log(tx)
        setTxHash(`https://goerli.etherscan.io/tx/${tx.transactionHash}`);
        // Open the modal
        setIsOpen(true);
        setloadingTX(false)

    }



    const closeModal = () => {
        // Close the modal and reset txHash state
        setIsOpen(false);
        setTxHash('');
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className={styles.container}>
                <main className={styles.main}>
                    <Box className={"max-w-4xl hover:text-black min-w-600"}            >
                        <SimpleGrid spacing={10} row={1} columns={2}>
                            <Card _hover={{ transform: "scale(1.10)" }}
                                transition="all 0.2s ease-out"
                                display="inline-block"
                                overflow="hidden" >
                                <CardHeader>
                                    <Center> 
                                    <Image borderRadius='10%' src={'https://media.tenor.com/lcuvD0zkFNMAAAAM/question-mark.gif'} boxsize='200px' alt='placeholder' />
                                    </Center>
                                    <Center>
                                    <Heading size='md' className={"my-4"}> ERC-1155 Random Words NFT</Heading>
                                    </Center>
                                    <Text>What Songs will you compose with those words ?</Text>
                                    
                                </CardHeader>

                            </Card>

                            <Button onClick={() => mintNFT(localProvider)}
                                style={{ marginTop: '140px' }} className={"max-w-4xl my-10"}> Mint Words
                                {loadingTX && <div className="loader"><FaSpinner className="spinner" /></div>}
                            </Button>

                        </SimpleGrid>
                        <Modal isOpen={modalIsOpen} onRequestClose={closeModal} style={customStyles}>
                            <h2>Transaction Hash:</h2>
                            <p>{txHash}</p>
                            <button onClick={closeModal}>Close</button>
                        </Modal>
                    </Box>
                </main>
            </div>


        </div>
    );
}